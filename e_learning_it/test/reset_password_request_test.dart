import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';

// 1. Import ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏ó‡∏™
import 'package:e_learning_it/login/reset_password_request.dart';

// 2. Import ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ)
// (‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏õ‡∏ó‡∏µ‡πà ResetPasswordVerifyScreen
// ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á ErrorDialogPage)
import 'package:e_learning_it/login/reset_password_verify.dart';
import 'package:e_learning_it/error_dialog_page.dart';

void main() {
  // Helper Function (‡∏ï‡∏±‡∏ß‡∏ä‡πà‡∏ß‡∏¢) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ ResetPasswordRequestScreen
  Future<void> pumpResetScreen(WidgetTester tester) async {
    // ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏∏‡πâ‡∏°‡∏î‡πâ‡∏ß‡∏¢ MaterialApp ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Widget (‡πÄ‡∏ä‡πà‡∏ô Navigator, AppBar) ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
    await tester.pumpWidget(MaterialApp(
      home: const ResetPasswordRequestScreen(),
      // (‡∏Å‡∏≥‡∏´‡∏ô‡∏î routes ‡∏à‡∏≥‡∏•‡∏≠‡∏á ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÄ‡∏ó‡∏™‡∏Å‡∏≤‡∏£
      // Navigator.push ‡πÑ‡∏õ‡∏¢‡∏±‡∏á ResetPasswordVerifyScreen)
      routes: {
        '/verify': (context) => const ResetPasswordVerifyScreen(identifier: 'test'),
      },
    ));
    await tester.pumpAndSettle(); // ‡∏£‡∏≠ UI ‡∏ô‡∏¥‡πà‡∏á
  }

  // --- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏™ ---

  group('ResetPasswordRequestScreen Widget Tests', () {
    
    // Test Case 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ UI ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏£‡∏ö
    testWidgets('Initial UI elements are displayed correctly', (WidgetTester tester) async {
      // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤
      await pumpResetScreen(tester);

      // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö AppBar (‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
      expect(find.text('‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô'), findsOneWidget);

      // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô Body
      expect(find.text('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Email ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï'), findsOneWidget);

      // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å (‡∏à‡∏≤‡∏Å labelText)
      expect(find.widgetWithText(TextFormField, 'Email ‡∏´‡∏£‡∏∑‡∏≠ ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï'), findsOneWidget);

      // 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏∏‡πà‡∏° (‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ Loading)
      expect(find.widgetWithText(ElevatedButton, '‡∏™‡πà‡∏á‡∏£‡∏´‡∏±‡∏™ OTP'), findsOneWidget);
      expect(find.byType(CircularProgressIndicator), findsNothing);
    });

    // Test Case 2: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å
    testWidgets('Can enter text into text field', (WidgetTester tester) async {
      await pumpResetScreen(tester);

      // 1. ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å
      await tester.enterText(
        find.widgetWithText(TextFormField, 'Email ‡∏´‡∏£‡∏∑‡∏≠ ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï'),
        'test@example.com'
      );
      await tester.pump(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI

      // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏à‡∏≠
      expect(find.text('test@example.com'), findsOneWidget);
    });

    // Test Case 3: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Validation (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏•‡∏¢)
    testWidgets('Shows validation error when field is empty', (WidgetTester tester) async {
      await pumpResetScreen(tester);

      // 1. ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏™‡πà‡∏á‡∏£‡∏´‡∏±‡∏™ OTP" (‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏∞‡πÑ‡∏£)
      await tester.tap(find.text('‡∏™‡πà‡∏á‡∏£‡∏´‡∏±‡∏™ OTP'));
      await tester.pump(); // ‡∏£‡∏≠ validator ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô

      // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Error ‡∏Ç‡∏≠‡∏á validator ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤
      // üí° (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ‡πÄ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á 1 ‡∏≠‡∏±‡∏ô (findsOneWidget)
      // ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ errorText ‡∏à‡∏∞ "‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà" labelText, ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ "‡πÄ‡∏û‡∏¥‡πà‡∏°" ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
      expect(find.text('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Email ‡∏´‡∏£‡∏∑‡∏≠ ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï'), findsOneWidget); 
    });

    

  });
}

